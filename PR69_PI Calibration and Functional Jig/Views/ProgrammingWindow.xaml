<Window x:Class="PR69_PI_Calibration_and_Functional_Jig.Views.ProgrammingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:model="clr-namespace:PR69_PI_Calibration_and_Functional_Jig.Model"
        xmlns:vm="clr-namespace:PR69_PI_Calibration_and_Functional_Jig.ViewModel"
        xmlns:local="clr-namespace:PR69_PI_Calibration_and_Functional_Jig.Views"
        mc:Ignorable="d" TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="13"
        TextElement.FontFamily="{materialDesign:MaterialDesignFont}"
        Title="ConfigurationWindow" Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowStyle="None"
                 WindowState="Normal" ResizeMode="NoResize">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </Window.Resources>
    <Window.DataContext>
        <vm:ProgrammingWindowVM x:Name="ProgrammingVM"/>
    </Window.DataContext>

    <materialDesign:DialogHost DataContext="{x:Reference ProgrammingVM}">
        <materialDesign:DialogHost.DialogContent>
            <StackPanel>
                
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>
        <materialDesign:DialogHost.Content>

            <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="2" Margin="2 2 2 2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="220" />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Background="#1c313a">
                            <TextBlock Text="Programming" Padding="6" Margin="2 0 0 0" Foreground="White"/>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Background="#1c313a">
                            <Button x:Name="Close" Click="Close_Click" Height="18" Width="18" 
                                    IsEnabled="{Binding IsStartBtnEnable, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                    Background="IndianRed" Margin="2,5,10.4,5" HorizontalAlignment="Right"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Foreground="White">
                                <materialDesign:PackIcon Kind="Multiply" Height="12" Foreground="White" Width="12" Background="IndianRed"/>
                            </Button>
                        </StackPanel>
                    </Grid>

                    <StackPanel Grid.Row="1" Orientation="Vertical">
                        <GroupBox Margin="8 8" Padding="5"  Width="auto" Height="345" BorderThickness="1">
                            <GroupBox.Header>
                                <TextBlock Text="Report Window" FontSize="15" HorizontalAlignment="Center"></TextBlock>
                            </GroupBox.Header>

                            <StackPanel Orientation="Vertical">
                                <!--<xctk:RichTextBox Text="{Binding Path=strtestReport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Width="auto" Height="250" 
                                              IsReadOnly="True" FontWeight="Bold" FontSize="22" Margin="15 15 15 15">
                                    <xctk:RichTextBoxFormatBarManager.FormatBar>
                                        <xctk:RichTextBoxFormatBar />
                                    </xctk:RichTextBoxFormatBarManager.FormatBar>
                                </xctk:RichTextBox>-->

                                <TextBox Width="auto" Height="250" 
                                        IsReadOnly="True" FontWeight="Bold" FontSize="12" Margin="2 2 2 2"
                                        TextWrapping="Wrap" Text="{Binding Path=strtestReport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        ></TextBox>
                                <StackPanel Orientation="Horizontal">
                                    <ProgressBar Value="{Binding CurrentValue, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                 HorizontalAlignment="Left" Margin="15 18 0 0" Height="25" Width="700"/>

                                    <TextBlock Text="{Binding StatusInPercentage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5 20 0 0" FontWeight="Bold" FontSize="16"/>
                                    <TextBlock Text="%" Margin="0 20 0 0" FontWeight="Bold" FontSize="16"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                            <TextBox Margin="-80 0 0 0" Width="50" Height="35" IsReadOnly="True" HorizontalAlignment="Left"
                                     Visibility="{Binding textboxVis,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                     Background="{Binding backclr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ></TextBox>                            
                            <CheckBox Content="Skip calibration constant erase"                                      
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding IsBatchProgEnable, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      Visibility="{Binding IsBatchProgVisible,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                      IsChecked="{Binding chkSkipCalibration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <CheckBox Content="Batch Programming" Margin="18 5"                                 
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding IsBatchProgEnable, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      Visibility="{Binding IsBatchProgVisible,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                      IsChecked="{Binding chkbatchProgramming, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Button  Width="85" Height="30" Padding="5" Margin="18 5"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                Command="{Binding btnStartProgram}" Foreground="WhiteSmoke" Background="#26c6da"
                                Visibility="{Binding Path=StartProgramBtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                IsEnabled="{Binding IsStartBtnEnable, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">Start</Button>

                            <Button  Width="85" Height="30" Padding="5" Margin="20 5 0 0"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                Command="{Binding StopProgramBtn}" Foreground="WhiteSmoke" Background="#26c6da"      
                                Visibility="{Binding IsBatchProgVisible,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                IsEnabled="{Binding IsStopBtnEnable, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >Stop</Button>
                            
                        </StackPanel>


                    </StackPanel>
                    
                </Grid>
            </Border>
            
        </materialDesign:DialogHost.Content>
    </materialDesign:DialogHost>

</Window>

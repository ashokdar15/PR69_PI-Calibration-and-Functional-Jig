<Window x:Class="PR69_PI_Calibration_and_Functional_Jig.Views.ConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:PR69_PI_Calibration_and_Functional_Jig.Model"
        xmlns:vm="clr-namespace:PR69_PI_Calibration_and_Functional_Jig.ViewModel"
        xmlns:local="clr-namespace:PR69_PI_Calibration_and_Functional_Jig.Views"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextElement.FontFamily="{materialDesign:MaterialDesignFont}"
        Title="ConfigurationWindow" Height="740" Width="1262" WindowStartupLocation="CenterScreen" WindowStyle="None"
                 WindowState="Normal" ResizeMode="NoResize">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Background" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <vm:ConfigurationWindowVM x:Name="ConfigurationWindowVM"/>
    </Window.DataContext>

    <materialDesign:DialogHost DataContext="{x:Reference ConfigurationWindowVM}"
        IsOpen="{Binding IsDialogOpen ,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
        <materialDesign:DialogHost.DialogContent>
            <StackPanel>
                <StackPanel Name="MainContainer" HorizontalAlignment="Center" MinHeight="150" VerticalAlignment="Center" MinWidth="350">
                    <StackPanel HorizontalAlignment="Center" 
                            Margin="20 20 20 0"
                            Width="300"
                            Visibility="{Binding Path=MesssageVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"  VerticalAlignment="Center">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="50"/>
                            </Grid.RowDefinitions>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0">
                                <materialDesign:PackIcon Kind="AndroidMessages" Width="30" Height="30" Foreground="{DynamicResource PrimaryHueMidBrush}"
                                                     Visibility="{Binding Path=IconMsgVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"/>
                                <materialDesign:PackIcon Kind="Error" Width="30" Height="30" Foreground="IndianRed"
                                                     Visibility="{Binding Path=IconErrorVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"/>
                                <materialDesign:PackIcon Kind="QuestionMarkCircle" Width="30" Height="30" Foreground="IndianRed"
                                                     Visibility="{Binding Path=IconQuestionVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"/>
                            </StackPanel>
                            <TextBlock Grid.Column="1" Grid.Row="0"
                                   Margin="20"
                                   VerticalAlignment="Center"
                                   Text="{Binding Path=Msg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   Foreground="Red"
                                   TextWrapping="Wrap"/>
                        </Grid>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=AnalogIPTestsEditVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Analog Input Details" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <CheckBox Content="CALIBRATION 4to20mA" 
                                      Grid.Column="0" Grid.Row="0" Margin="20 15"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsAnalogInputTests.IsPR69Product, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsAnalogInputTests.CALIB_4mA_CNT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CALIBRATION 0to10V" 
                                      Grid.Column="1" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsAnalogInputTests.IsPR69Product, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsAnalogInputTests.CALIB_1V_CNT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CALIBRATION 0to20mA PI" 
                                      Grid.Column="0" Grid.Row="1" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsAnalogInputTests.IsPIProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsAnalogInputTests.CALIB_1mA_CNT_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CALIBRATION 0to10V PI" 
                                      Grid.Column="1" Grid.Row="1" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsAnalogInputTests.IsPIProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsAnalogInputTests.CALIB_1V_CNT_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>




                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=AnalogOPTestsEditVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Analog Output Details" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <CheckBox Content="CALIBRATION 0to20mA" 
                                      Grid.Column="0" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsAnalogOutputTests.IsPIProduct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsAnalogOutputTests.SET_DFALT_1MA_CNT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CALIBRATION 4to20mA" 
                                      Grid.Column="1" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsAnalogOutputTests.IsPR69Product, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsAnalogOutputTests.SET_DFALT_4MA_CNT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CALIBRATION 0to10V" 
                                      Grid.Column="2" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsAnalogOutputTests.SET_DFALT_1V_CNT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>



                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=TC_RTDTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit TC RTD Details" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <CheckBox Content="CALIB MV" 
                                      Grid.Column="0" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsTC_RTDTests.IsPR69Product, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsTC_RTDTests.CALIB_MV_CNT_PR69_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CALIB PT100" 
                                      Grid.Column="1" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsTC_RTDTests.IsPR69Product, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsTC_RTDTests.CALIB_PT100_PR69_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CALIB MV(PR43)" 
                                      Grid.Column="0" Grid.Row="1" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsTC_RTDTests.IsPR43Product, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsTC_RTDTests.CALIB_MV_CNT_PR43, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CALIB PT100(PR43)" 
                                      Grid.Column="1" Grid.Row="1" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="{Binding clsTC_RTDTests.IsPR43Product, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding clsTC_RTDTests.CALIB_PT100_PR43, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=RelayOrSSRTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Output Tests Details" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <CheckBox Content="OP1" 
                                      Grid.Column="0" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsRelayORSSRTests.OP1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="0" Grid.Row="1" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.OP1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"                                       
                                      ItemsSource="{Binding Path=OutputTypeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.SelectedOP1Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <!--<ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="0" Grid.Row="2" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.OP1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"                                       
                                      ItemsSource="{Binding Path=OP1subtestList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.OP1subtest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->

                                <ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="0" Grid.Row="2" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.IsOP1RelaySelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"                                        
                                      ItemsSource="{Binding Path=RelayTypeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.SelectedOP1RelayType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedIndex="{Binding clsRelayORSSRTests.SelectedIndexOP1Relay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="OP2" 
                                      Grid.Column="1" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsRelayORSSRTests.OP2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="1" Grid.Row="1" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.OP2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"  
                                      ItemsSource="{Binding Path=OutputTypeListOP2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.SelectedOP2Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <!--<ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="1" Grid.Row="2" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.OP2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"                                       
                                      ItemsSource="{Binding Path=OP2subtestList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.OP2subtest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->

                                <ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="1" Grid.Row="2" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.IsOP2RelaySelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"  
                                      ItemsSource="{Binding Path=RelayTypeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.SelectedOP2RelayType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedIndex="{Binding clsRelayORSSRTests.SelectedIndexOP2Relay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="OP3" 
                                      Grid.Column="2" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsRelayORSSRTests.OP3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="2" Grid.Row="1" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.OP3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"  
                                      ItemsSource="{Binding Path=OutputTypeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.SelectedOP3Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <!--<ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="2" Grid.Row="2" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.OP3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"                                       
                                      ItemsSource="{Binding Path=OP3subtestList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.OP3subtest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->

                                <ComboBox materialDesign:HintAssist.Hint="Type" Grid.Column="2" Grid.Row="2" Margin="20 20"
                                      materialDesign:TextFieldAssist.HasClearButton="False"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"  
                                      IsEnabled="{Binding clsRelayORSSRTests.IsOP3RelaySelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="False"
                                      ItemsSource="{Binding Path=RelayTypeList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding clsRelayORSSRTests.SelectedOP3RelayType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedIndex="{Binding clsRelayORSSRTests.SelectedIndexOP3Relay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=CalibConstTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Calib Constants Details" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <CheckBox Content="WRITE CALIB CONST" 
                                      Grid.Column="0" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCalibrationConstantTests.WRITE_CALIB_CONST, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="WRITE CALIB CONST WITH VREF" 
                                      Grid.Column="1" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCalibrationConstantTests.WRITE_CALIB_CONST_WITH_VREF, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=CommonTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Common Tests Details" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <CheckBox Content="READ DEVICE ID" 
                                      Grid.Column="0" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCommonTests.READ_DEVICE_ID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="READ CALIB CONST STATUS" 
                                      Grid.Column="1" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCommonTests.READ_CALIB_CONST, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="SWITCH SENSOR RELAY" 
                                      Grid.Column="2" Grid.Row="0" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCommonTests.SWITCH_SENSOR_RELAY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                               
                                <CheckBox Content="START DISP TEST" 
                                      Grid.Column="0" Grid.Row="1" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCommonTests.START_DISP_TEST, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="START KEYPAD TEST" 
                                      Grid.Column="1" Grid.Row="1" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCommonTests.START_KEYPAD_TEST, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="24V OP TEST" 
                                      Grid.Column="2" Grid.Row="1" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCommonTests.Vtg24V_OP_TEST, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="START MODBUS TEST" 
                                      Grid.Column="0" Grid.Row="2" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCommonTests.START_MODBUS_TEST, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                <CheckBox Content="CJC TEST" 
                                      Grid.Column="1" Grid.Row="2" Margin="20 20"
                                      HorizontalAlignment="Left" Width="auto"
                                      IsEnabled="True"
                                      IsChecked="{Binding clsCommonTests.CJC_TEST, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=CalibDelaysEditVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Calibration Delays Details(mSec)" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="mV Start Delay" 
                                    Text="{Binding clsCalibrationDelays.OnemVOrFiftymVStartModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="mV Run Delay" 
                                    Text="{Binding clsCalibrationDelays.OnemVOrFiftymVRunModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="ohm Start Delay" 
                                    Text="{Binding clsCalibrationDelays.ThreeFiftyOhmStartModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="ohm Run Delay" 
                                    Text="{Binding clsCalibrationDelays.ThreeFiftyOhmRunModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="mA Start Delay" 
                                    Text="{Binding clsCalibrationDelays.FourmAORTwentymAStartModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="mA Run Delay" 
                                    Text="{Binding clsCalibrationDelays.FourmAORTwentymARunModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="Volt Start Delay" 
                                    Text="{Binding clsCalibrationDelays.OneVoltOrNineVoltStartModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="Volt Run Delay" 
                                    Text="{Binding clsCalibrationDelays.OneVoltOrNineVoltRunModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="Analog o/p Delay" 
                                    Text="{Binding clsCalibrationDelays.AnalogOutputObservedValueDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="VRef Start Delay" 
                                    Text="{Binding clsCalibrationDelays.VREFReadDelayStartMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="VRef Run Delay" 
                                    Text="{Binding clsCalibrationDelays.VREFReadDelayRunMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=CalibDelaysPR43EditVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Calibration Delays Details(mSec)" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>                                  
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>                                   
                                    <RowDefinition/>                                   
                                </Grid.RowDefinitions>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="PT100 Start Delay" 
                                    Text="{Binding clsCalibrationDelaysPR43.PT100_Start_Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="PT100 Run Delay" 
                                    Text="{Binding clsCalibrationDelaysPR43.PT100_Run_Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="PT313 Start Delay" 
                                    Text="{Binding clsCalibrationDelaysPR43.PT313_Start_Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="PT313 Run Delay" 
                                    Text="{Binding clsCalibrationDelaysPR43.PT313_Run_Delay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>


                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=CalibDelaysPIEditVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Calibration Delays PI Details(mSec)" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="mV Start Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.OnemVOrFiftymVStartModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="mV Run Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.OnemVOrFiftymVRunModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="ohm Start Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.ThreeFiftyOhmStartModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="ohm Run Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.ThreeFiftyOhmRunModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="mA Start Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.FourmAORTwentymAStartModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="mA Run Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.FourmAORTwentymARunModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="Volt Start Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.OneVoltOrNineVoltStartModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="Volt Run Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.OneVoltOrNineVoltRunModeDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="Analog o/p Delay" 
                                    Text="{Binding clsCalibrationDelaysPI.AnalogOutputObservedValueDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=ToleranceEditVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Tolerance of PI" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="FIVE VOLT MIN PI" 
                                    Text="{Binding clsTolerancesOfPI.FIVE_VOLT_MIN_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="FIVE VOLT MAX PI" 
                                    Text="{Binding clsTolerancesOfPI.FIVE_VOLT_MAX_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="TWELVE mA MIN PI" 
                                    Text="{Binding clsTolerancesOfPI.TWELVE_mA_MIN_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="TWELVE mA MAX PI" 
                                    Text="{Binding clsTolerancesOfPI.TWELVE_mA_MAX_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="One VOLT MAX PI" 
                                    Text="{Binding clsTolerancesOfPI.One_VOLT_MAX_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="One VOLT MIN PI" 
                                    Text="{Binding clsTolerancesOfPI.One_VOLT_MIN_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="TEN VOLT MAX PI" 
                                    Text="{Binding clsTolerancesOfPI.TEN_VOLT_MAX_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="TEN VOLT MIN PI" 
                                    Text="{Binding clsTolerancesOfPI.TEN_VOLT_MIN_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="ONE mAMP MAX" 
                                    Text="{Binding clsTolerancesOfPI.ONE_mAMP_MAX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="ONE mAMP MIN" 
                                    Text="{Binding clsTolerancesOfPI.ONE_mAMP_MIN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="TWENTY mAMP MAX PI" 
                                    Text="{Binding clsTolerancesOfPI.TWENTY_mAMP_MAX_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="TWENTY mAMP MIN PI" 
                                    Text="{Binding clsTolerancesOfPI.TWENTY_mAMP_MIN_PI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=ToleranceofPR69EditVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBlock Text="Edit Tolerance Of PR69 Details" HorizontalAlignment="Center" Margin="10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="FIVE VOLT MIN" 
                                    Text="{Binding clsTolerancesOfPR69.FIVE_VOLT_MIN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="FIVE VOLT MAX" 
                                    Text="{Binding clsTolerancesOfPR69.FIVE_VOLT_MAX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="TWELVE mA MIN" 
                                    Text="{Binding clsTolerancesOfPR69.TWELVE_mA_MIN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="TWELVE mA MAX" 
                                    Text="{Binding clsTolerancesOfPR69.TWELVE_mA_MAX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="One VOLT MAX" 
                                    Text="{Binding clsTolerancesOfPR69.One_VOLT_MAX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="One VOLT MIN" 
                                    Text="{Binding clsTolerancesOfPR69.One_VOLT_MIN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="TEN VOLT MAX" 
                                    Text="{Binding clsTolerancesOfPR69.TEN_VOLT_MAX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="TEN VOLT MIN" 
                                    Text="{Binding clsTolerancesOfPR69.TEN_VOLT_MIN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="ONE mAMP MAX" 
                                    Text="{Binding clsTolerancesOfPR69.FOUR_mAMP_MAX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="ONE mAMP MIN" 
                                    Text="{Binding clsTolerancesOfPR69.FOUR_mAMP_MIN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="TWENTY mAMP MAX" 
                                    Text="{Binding clsTolerancesOfPR69.TWENTY_mAMP_MAX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="TWENTY mAMP MIN" 
                                    Text="{Binding clsTolerancesOfPR69.TWENTY_mAMP_MIN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel MinWidth="300" Width="auto"  Margin="20 20 20 0"                            
                                Visibility="{Binding Path=AccuracyDetailsEditVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Edit Accuracy Details" HorizontalAlignment="Center" Margin="30 10 10 10" FontSize="15"
                                   Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                            <TextBlock Text="{Binding AccParameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Margin="0 10 10 10" FontSize="15"
                                   Foreground="Blue"/>
                        </StackPanel>
                        <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="No. Test Points" 
                                    Text="{Binding clsAccuracyTests.NumberTestPoints, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>
                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="Min" 
                                    Text="{Binding clsAccuracyTests.Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>
                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="Max" 
                                    Text="{Binding clsAccuracyTests.Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>
                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="Tolerance" 
                                    Text="{Binding clsAccuracyTests.Tolerance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" Width="auto"
                                    materialDesign:HintAssist.Hint="Accuracy timing" 
                                    Text="{Binding clsAccuracyTests.DelayForNexttest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="P1" 
                                    Text="{Binding clsAccuracyTests.P1, Mode=TwoWay, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="{Binding clsAccuracyTests.VisP1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="P2" 
                                    Text="{Binding clsAccuracyTests.P2, Mode=TwoWay,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="{Binding clsAccuracyTests.VisP2,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="P3" 
                                    Text="{Binding clsAccuracyTests.P3, Mode=TwoWay, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding clsAccuracyTests.VisP3,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="2" Width="auto"
                                    materialDesign:HintAssist.Hint="P4" 
                                    Text="{Binding clsAccuracyTests.P4, Mode=TwoWay, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding clsAccuracyTests.VisP4,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="3" Width="auto"
                                    materialDesign:HintAssist.Hint="P5" 
                                    Text="{Binding clsAccuracyTests.P5, Mode=TwoWay, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding clsAccuracyTests.VisP5,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="3" Width="auto"
                                    materialDesign:HintAssist.Hint="P6" 
                                    Text="{Binding clsAccuracyTests.P6, Mode=TwoWay, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding clsAccuracyTests.VisP6,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="3" Width="auto"
                                    materialDesign:HintAssist.Hint="P7" 
                                    Text="{Binding clsAccuracyTests.P7, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding clsAccuracyTests.VisP7,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="3" Grid.Row="3" Width="auto"
                                    materialDesign:HintAssist.Hint="P8" 
                                    Text="{Binding clsAccuracyTests.P8, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding clsAccuracyTests.VisP8,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="4" Width="auto"
                                    materialDesign:HintAssist.Hint="P9" 
                                    Text="{Binding clsAccuracyTests.P9, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding clsAccuracyTests.VisP9,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>

                                <TextBox Margin="10 10" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="4" Width="auto"
                                    materialDesign:HintAssist.Hint="P10" 
                                    Text="{Binding clsAccuracyTests.P10, Mode=TwoWay, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding clsAccuracyTests.VisP10,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource BoolToVis}}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip=""></TextBox>




                            </Grid>
                        </Border>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Button Content="Ok"
                                Visibility="{Binding Path=okbtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                Command="{Binding Path=BtnYesCmd}" Width="80" HorizontalAlignment="Center" Margin="10 20"/>
                        <StackPanel Orientation="Horizontal" 
                                    Visibility="{Binding Path=MsgVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Button Content="Yes" Foreground="WhiteSmoke" Command="{Binding Path=BtnYesCmd, Source={x:Reference ConfigurationWindowVM}}" Width="80"
                                    HorizontalAlignment="Center" Margin="10 20"/>
                            <Button Content="No" Foreground="WhiteSmoke" Command="{Binding Path=BtnNoCmd, Source={x:Reference ConfigurationWindowVM}}" BorderBrush="IndianRed" 
                                    Background="IndianRed" Width="80" HorizontalAlignment="Center" Margin="10 20"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>

        <materialDesign:DialogHost.Content>
            <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 2 2 2">
                <StackPanel Orientation="Vertical">
                    <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="0 0" Height="510">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="250" />
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Background="#1c313a">
                                <TextBlock Text="Configurations" Padding="6" Margin="2 0 0 0" Foreground="White"/>
                            </StackPanel>
                            <StackPanel Grid.Row="0" Grid.Column="1" Background="#1c313a">
                                <Button x:Name="Close" Click="Close_Click" Height="20" Width="20" Background="IndianRed" Margin="2,5,10.4,5" HorizontalAlignment="Right"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Foreground="White">
                                    <materialDesign:PackIcon Kind="Multiply" Height="12" Foreground="White" Width="12" Background="IndianRed"/>
                                </Button>
                            </StackPanel>
                            <TreeView x:Name="MainTreeView" Grid.Column="0" Grid.Row="1" BorderThickness="0 0 1 0" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                                SelectedItemChanged="MainTreeView_SelectedItemChanged" AllowDrop="True"                 
                                HorizontalAlignment="Stretch" Padding="0" VerticalAlignment="Stretch"
                                ItemsSource="{Binding ModifiedCatId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <TreeView.ItemContainerStyle>
                                    <Style  TargetType="{x:Type TreeViewItem}">
                                        <Setter Property="TreeViewItem.IsExpanded" Value="True"/>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding ConfigurationData}" DataType="{x:Type model:ConfigurationDataList}" >
                                        <Label VerticalAlignment="Center">
                                            <Label.Content>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                    <Button Margin="0 0 0 0" 
                                                        Command="{Binding AddSeriesCmd, Source={x:Reference ConfigurationWindowVM}}"
                                                        materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                        <Button.Content >
                                                            <materialDesign:PackIcon Kind="PlusCircle" Height="15" Width="15" Foreground="Green" VerticalAlignment="Center"/>
                                                        </Button.Content>
                                                    </Button>
                                                    <TextBlock Text="Config Data" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Label.Content>
                                        </Label>
                                        <HierarchicalDataTemplate.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding CatIdLists}" DataType="{x:Type model:ConfigurationData}">
                                                <Label VerticalAlignment="Center">
                                                    <Label.Content>
                                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                            <Button Margin="0 0 0 0" 
                                                    Command="{Binding AddCatIdCmd , Source={x:Reference ConfigurationWindowVM}}"
                                                    CommandParameter="{Binding DeviceType}"
                                                    materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                                <Button.Content >
                                                                    <materialDesign:PackIcon Kind="PlusCircle" Height="15" Width="15" Foreground="Green" VerticalAlignment="Center"/>
                                                                </Button.Content>
                                                            </Button>
                                                            <Button Margin="0 0 0 0" 
                                                    Command="{Binding DeleteSeriesCmd , Source={x:Reference  ConfigurationWindowVM}}"
                                                    CommandParameter="{Binding DeviceType}"
                                                    materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                                <Button.Content >
                                                                    <materialDesign:PackIcon Kind="DeleteCircle" Height="15" Width="15" Foreground="IndianRed" VerticalAlignment="Center"/>
                                                                </Button.Content>
                                                            </Button>
                                                            <TextBlock Text="{Binding DeviceType}" VerticalAlignment="Center"/>
                                                        </StackPanel>
                                                    </Label.Content>
                                                </Label>
                                                <HierarchicalDataTemplate.ItemTemplate>
                                                    <HierarchicalDataTemplate ItemsSource="{Binding CatIdLists}" DataType="{x:Type model:ConfigurationData}">
                                                        <Label VerticalAlignment="Center">
                                                            <Label.Content>
                                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >
                                                                    <Button Margin="0 0 0 0"
                                                            Name="btnEditCatId" Command="{Binding Path=EditCatIdCmd, Source={x:Reference ConfigurationWindowVM}}"
                                                            CommandParameter="{Binding DeviceName}"
                                                            materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                                        <Button.Content >
                                                                            <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                                        </Button.Content>
                                                                    </Button>
                                                                    <Button Margin="0 0 0 0" 
                                                            Command="{Binding DeleteCatIdCmd, Source={x:Reference ConfigurationWindowVM}}"
                                                            CommandParameter="{Binding DeviceName}"
                                                            materialDesign:ButtonAssist.CornerRadius="10" Name="btnDeleteCatId" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                                        <Button.Content>
                                                                            <materialDesign:PackIcon Kind="DeleteCircle" Height="15" Width="15" Foreground="IndianRed" VerticalAlignment="Center"/>
                                                                        </Button.Content>
                                                                    </Button>
                                                                    <TextBlock Text="{Binding DeviceName}" x:Name="DeviceNameTxt" VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                            </Label.Content>
                                                        </Label>
                                                    </HierarchicalDataTemplate>
                                                </HierarchicalDataTemplate.ItemTemplate>
                                            </HierarchicalDataTemplate>
                                        </HierarchicalDataTemplate.ItemTemplate>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                            <Grid Grid.Row="1" Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="60"/>
                                    <RowDefinition Height="60"/>
                                    <RowDefinition Height="60"/>
                                    <RowDefinition Height="60"/>
                                    <RowDefinition Height="180"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Row="0" Grid.Column="4" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <Button 
                                    Visibility="{Binding Path=IsSaveBtnVis,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                    Command="{Binding SaveCmd}" CommandParameter="{Binding Path=SaveParameter,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                    materialDesign:ButtonAssist.CornerRadius="5" Background="Teal" BorderThickness="0" materialDesign:ShadowAssist.ShadowEdges="None"
                                    Height="30" Width="auto" Padding="10 0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5 10 10 10">
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Kind="ContentSave" Foreground="WhiteSmoke" Height="20" Width="15" VerticalAlignment="Center" />
                                                <TextBlock  Margin="5 0 0 0" Text="{Binding Path=Savebtntext,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                    VerticalAlignment="Center" Foreground="WhiteSmoke"/>
                                            </StackPanel>
                                        </Button.Content>
                                    </Button>
                                </StackPanel>

                                <GroupBox Grid.Row="2" Grid.RowSpan="3" Grid.Column="2" Grid.ColumnSpan="3" Padding="0"
                                         Width="365" Height="120" Margin="120 0 0 0" BorderThickness="2">
                                    <GroupBox.Header>
                                        <TextBlock Text="Input Accuracy Details" FontSize="15"></TextBlock>
                                    </GroupBox.Header>

                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <StackPanel Orientation="Horizontal" Margin="0 10 0 0" Grid.Row="0">
                                            <StackPanel Margin="8,0,0,10" Orientation="Horizontal"
                                                HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom">
                                                <CheckBox  
                                                IsChecked="{Binding Path=IsmAmpInputTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"                                     
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Content="mAmp"/>

                                                <Button Command="{Binding Path=EditmAmpInputTestsCmd}" Margin="8 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsmAmpInputTest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                    <Button.Content >
                                                        <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                    </Button.Content>
                                                    <Button.ToolTip>
                                                        <TextBlock Text="Edit mAmp Input Tests Details"></TextBlock>
                                                    </Button.ToolTip>
                                                </Button>

                                            </StackPanel>

                                            <StackPanel Margin="8,0,0,10" Orientation="Horizontal"
                                                HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom">
                                                <CheckBox  
                                                IsChecked="{Binding Path=IsVoltInputTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"                                     
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Content="Volt"/>

                                                <Button Command="{Binding Path=EditVoltInputTestsCmd}"  Margin="8 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsVoltInputTest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                    <Button.Content >
                                                        <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                    </Button.Content>
                                                    <Button.ToolTip>
                                                        <TextBlock Text="Edit Volt Input Tests Details"></TextBlock>
                                                    </Button.ToolTip>
                                                </Button>

                                            </StackPanel>

                                            <StackPanel Margin="8,0,0,10" Orientation="Horizontal"
                                                HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom">
                                                <CheckBox  
                                                IsChecked="{Binding Path=IsPT100sensorInputTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"                                     
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Content="PT100 sensor"/>

                                                <Button Command="{Binding Path=EditPT100sensorInputTestsCmd}"  Margin="8 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsPT100sensorInputTest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                    <Button.Content >
                                                        <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                    </Button.Content>
                                                    <Button.ToolTip>
                                                        <TextBlock Text="Edit PT100 Sensor Input Tests Details"></TextBlock>
                                                    </Button.ToolTip>
                                                </Button>

                                            </StackPanel>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0 0 0 10">
                                            <StackPanel Margin="8,0,0,10" Orientation="Horizontal"
                                                    HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom">
                                                <CheckBox  
                                                IsChecked="{Binding Path=IsRsensorInputTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"                                     
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Content="R sensor"/>

                                                <Button Command="{Binding Path=EditRsensorInputTestsCmd}"  Margin="12 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsRsensorInputTest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                    <Button.Content >
                                                        <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                    </Button.Content>
                                                    <Button.ToolTip>
                                                        <TextBlock Text="Edit R Sensor Input Tests Details"></TextBlock>
                                                    </Button.ToolTip>
                                                </Button>

                                            </StackPanel>
                                            <StackPanel Margin="8,0,0,10" Orientation="Horizontal"
                                                    HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom">
                                                <CheckBox  
                                                IsChecked="{Binding Path=IsJsensorInputTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"                                     
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Content="J sensor"/>

                                                <Button Command="{Binding Path=EditJsensorInputTestsCmd}"  Margin="12 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsJsensorInputTest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                    <Button.Content >
                                                        <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                    </Button.Content>
                                                    <Button.ToolTip>
                                                        <TextBlock Text="Edit J sensor Input Tests Details"></TextBlock>
                                                    </Button.ToolTip>
                                                </Button>

                                            </StackPanel>
                                        </StackPanel>

                                    </Grid>
                                </GroupBox>

                                <GroupBox Grid.Row="4" Grid.RowSpan="3" Grid.Column="2" Grid.ColumnSpan="2" Padding="0"
                                        Height="245" Width="300" Margin="5 28 0 0">
                                    <GroupBox.Header>
                                        <TextBlock Text="Input Accuracy Sequence" FontSize="15"></TextBlock>
                                    </GroupBox.Header>
                                    <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="0 0 0 0">
                                        <StackPanel Orientation="Horizontal">
                                            <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" >
                                                <ListBox Margin="5 5" Height="200" Width="150" FontSize="15"
                                                ItemsSource="{Binding AccuracyTestSequenceList,Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"
                                                SelectedIndex="{Binding AccuracylistviewIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsSelected" Value="True" >
                                                                    <Setter Property="FontWeight" Value="Bold" />
                                                                    <Setter Property="Background" Value="LightGreen" />
                                                                    <Setter Property="Foreground" Value="Black" />
                                                                    <Setter Property="FontSize" Value="20" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                            <Style.Resources>
                                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                                            </Style.Resources>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                </ListBox>
                                            </Border>
                                            <StackPanel Orientation="Horizontal">
                                                <Button Command="{Binding Path=EditUpAccuracytestCmd}"  Margin="15 10"                                             
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="40" Padding="0" Width="40">
                                                    <Button.Content >
                                                        <materialDesign:PackIcon Kind="ArrowUpDropCircleOutline" Height="40" Width="40" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                    </Button.Content>
                                                    <Button.ToolTip>
                                                        <TextBlock Text="Edit Upward Test Sequence"></TextBlock>
                                                    </Button.ToolTip>
                                                </Button>
                                                <Button Command="{Binding Path=EditDownAccuracytestgrpCmd}"  Margin="12 10"                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="40" Padding="0" Width="40">
                                                    <Button.Content >
                                                        <materialDesign:PackIcon Kind="ArrowBottomDropCircleOutline" Height="40" Width="40" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                    </Button.Content>
                                                    <Button.ToolTip>
                                                        <TextBlock Text="Edit Downward Test Sequence"></TextBlock>
                                                    </Button.ToolTip>
                                                </Button>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>
                                </GroupBox>

                                <TextBox Margin="15 5 0 0" HorizontalAlignment="Left" Width="auto"  Grid.Column="0" Grid.Row="0" 
                                    materialDesign:HintAssist.Hint="Device Type" 
                                    Text="{Binding Path=DeviceType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    IsReadOnly="{Binding Path=IsDeviceTypeUneditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip="Device Type"></TextBox>
                                <TextBox Margin="5 5 5 0" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Width="auto"
                                    materialDesign:HintAssist.Hint="Device Name" 
                                    Text="{Binding Path=DeviceName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    IsReadOnly="{Binding Path=IsDeviceNameUneditable,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                    ToolTip="Device Name as per Catalog ID"></TextBox>
                                <TextBox Margin="15 5 0 0" HorizontalAlignment="Left" Width="auto" Grid.Column="0" Grid.Row="1"  
                                    materialDesign:HintAssist.Hint="Device Id" 
                                    Text="{Binding Path=DeviceId, UpdateSourceTrigger=PropertyChanged}"
                                    IsReadOnly="{Binding Path=IsNotEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                                </TextBox>

                                <CheckBox  Margin="0 8 0 0" HorizontalAlignment="Left" Width="auto" Grid.Column="2" Grid.Row="0"  
                                    IsChecked="{Binding Path=ModbusSupport,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"                                     
                                    IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                    Content="Modbus Support"/>

                                <TextBox Margin="15 5 0 0" HorizontalAlignment="Left" Width="auto" Grid.Column="3" Grid.Row="0"  
                                    materialDesign:HintAssist.Hint="Stabilization Time (Sec)" 
                                    Text="{Binding Path=Communication_Start_Time, UpdateSourceTrigger=PropertyChanged}"
                                    IsReadOnly="{Binding Path=IsNotEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                                </TextBox>

                                <TextBox Margin="5 5 0 0" HorizontalAlignment="Left" Width="auto" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1"  
                                    materialDesign:HintAssist.Hint="Description" 
                                    Text="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged}"
                                    IsReadOnly="{Binding Path=IsNotEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                                </TextBox>
                                <GroupBox Grid.Row="2" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" Margin="10 20" HorizontalAlignment="Left" 
                                  Padding="0"  Width="565" Height="120" BorderThickness="2">
                                    <GroupBox.Header>
                                        <TextBlock Text="Calibration and Functional Tests Details" FontSize="15"></TextBlock>
                                    </GroupBox.Header>
                                    <Grid Grid.Row="2" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="50"/>
                                            <RowDefinition Height="42"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Margin="10,0,0,10" Grid.Row="0" Grid.Column="0" Orientation="Horizontal"
                                            HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom">
                                            <CheckBox   
                                                IsChecked="{Binding Path=IsCommonTests,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Source={x:Reference ConfigurationWindowVM}}"                                     
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Content="Common Tests"/>

                                            <Button Command="{Binding Path=EditCommonTestsCmd}"  Margin="5 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsCommonTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                <Button.Content>
                                                    <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                </Button.Content>
                                                <Button.ToolTip>
                                                    <TextBlock Text="Edit Common Tests Details"></TextBlock>
                                                </Button.ToolTip>
                                            </Button>
                                            
                                        </StackPanel>

                                        <StackPanel Grid.Row="0" Grid.Column="1"  Orientation="Horizontal" Margin="10,0,0,10"
                                            HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom"  >

                                            <CheckBox  IsChecked="{Binding Path=IsTC_RTDTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                     
                                            IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            Content="TC RTD Tests"/>

                                            <Button Command="{Binding Path=EditTC_RTDTestsCmd}"  Margin="5 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsTC_RTDTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                <Button.Content >
                                                    <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                </Button.Content>
                                                <Button.ToolTip>
                                                    <TextBlock Text="Edit TC_RTD Tests Details"></TextBlock>
                                                </Button.ToolTip>
                                            </Button>
                                            
                                        </StackPanel>

                                        <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" Margin="10,0,0,10"
                                            HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom" Grid.ColumnSpan="2"  >

                                            <CheckBox   
                                                IsChecked="{Binding Path=IsRelayTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Source={x:Reference ConfigurationWindowVM}}"                                     
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Content="Output Tests"/>

                                            <Button Command="{Binding Path=EditRelayTestsCmd}"  Margin="5 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsRelayTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                <Button.Content >
                                                    <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                </Button.Content>
                                                <Button.ToolTip>
                                                    <TextBlock Text="Edit Output Tests Details"></TextBlock>
                                                </Button.ToolTip>
                                            </Button>
                                            
                                        </StackPanel>

                                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="10,10"
                                                HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom"  >

                                            <CheckBox  IsChecked="{Binding Path=IsAnalogInputTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"                                     
                                            IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            Content="Analog Input Tests"/>

                                            <Button Command="{Binding Path=EditAnalogInputTestsCmd}"  Margin="5 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsAnalogInputTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                <Button.Content >
                                                    <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                </Button.Content>
                                                <Button.ToolTip>
                                                    <TextBlock Text="Edit Analog Input Tests Details"></TextBlock>
                                                </Button.ToolTip>
                                            </Button>
                                            
                                           
                                        </StackPanel>
                                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="10,0,0,10"
                                        HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom"  >
                                            <CheckBox  IsChecked="{Binding Path=IsAnalogOutputTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                     
                                            IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            Content="Analog Output Tests"/>

                                            <Button Command="{Binding Path=EditAnalogOutputTestsCmd}"  Margin="5 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsAnalogOutputTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                <Button.Content >
                                                    <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                </Button.Content>
                                                <Button.ToolTip>
                                                    <TextBlock Text="Edit Analog Output Tests Details"></TextBlock>
                                                </Button.ToolTip>
                                            </Button>

                                        </StackPanel>
                                        <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" Margin="10,0,0,10"
                                        HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom" Grid.ColumnSpan="2"  >
                                            <CheckBox   
                                                IsChecked="{Binding Path=IsCalibConstantTest,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Source={x:Reference ConfigurationWindowVM}}"                                     
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                Content="Calib Constant Tests"/>

                                            <Button Command="{Binding Path=EditCalibConstantTestsCmd}"  Margin="5 0"
                                                CommandParameter="{Binding DeviceName}"                                                        
                                                IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Visibility="{Binding Path=IsCalibConstantTestsVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                                <Button.Content >
                                                    <materialDesign:PackIcon Kind="CircleEditOutline" Height="15" Width="15" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                </Button.Content>
                                                <Button.ToolTip>
                                                    <TextBlock Text="Edit Calib constant Tests Details"></TextBlock>
                                                </Button.ToolTip>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </GroupBox>
                                <GroupBox Grid.Row="4" Grid.RowSpan="4" Grid.Column="0" Grid.ColumnSpan="3" Margin="10 40" HorizontalAlignment="Left"
                                  Padding="0"  Width="380" Height="auto" BorderThickness="2">
                                    <GroupBox.Header>
                                        <TextBlock Text="Calibration and Functional Tests Sequence" FontSize="15"></TextBlock>
                                    </GroupBox.Header>
                                    <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="2 0 0 0">
                                        <StackPanel Orientation="Horizontal">
                                            <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" >
                                                <ListBox Margin="10 10" Height="auto" Width="200" FontSize="15"
                                                 ItemsSource="{Binding ListOfGroupSequence,Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"
                                                 SelectedIndex="{Binding listviewIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsSelected" Value="True" >
                                                                    <Setter Property="FontWeight" Value="Bold" />
                                                                    <Setter Property="Background" Value="LightGreen" />
                                                                    <Setter Property="Foreground" Value="Black" />
                                                                    <Setter Property="FontSize" Value="20" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                            <Style.Resources>
                                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                                            </Style.Resources>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                </ListBox>
                                            </Border>
                                            <StackPanel Orientation="Vertical" Margin="0 40 0 0">

                                                <StackPanel Orientation="Horizontal">
                                                    <CheckBox Margin="10 0 0 0"
                                                        IsChecked="{Binding Path=IsDefaultSequence,   Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"                                     
                                                        IsEnabled="{Binding Path=IsCheckBoxEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                        Content="Default Sequence"/>
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal" Margin="0 20 0 0">
                                                    <Button Command="{Binding Path=EditUptestgrpCmd}"  Margin="18 10"                                             
                                                        IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                        Visibility="{Binding Path=IsSequencebtnEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                        materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="40" Padding="0" Width="40">
                                                        <Button.Content >
                                                            <materialDesign:PackIcon Kind="ArrowUpDropCircleOutline" Height="40" Width="40" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                        </Button.Content>
                                                        <Button.ToolTip>
                                                            <TextBlock Text="Edit Upward Test Group"></TextBlock>
                                                        </Button.ToolTip>
                                                    </Button>
                                                    <Button Command="{Binding Path=EditDowntestgrpCmd}"  Margin="20 10"                                        
                                                        IsEnabled="{Binding Path=IsCheckBoxEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                        Visibility="{Binding Path=IsSequencebtnEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}"
                                                        materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="40" Padding="0" Width="40">
                                                        <Button.Content >
                                                            <materialDesign:PackIcon Kind="ArrowBottomDropCircleOutline" Height="40" Width="40" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                                        </Button.Content>
                                                        <Button.ToolTip>
                                                            <TextBlock Text="Edit Downward Test Group"></TextBlock>
                                                        </Button.ToolTip>
                                                    </Button>
                                                </StackPanel>
                                            </StackPanel>

                                        </StackPanel>
                                    </Border>
                                </GroupBox>
                            </Grid>

                        </Grid>
                    </Border>
                    <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" Margin="0 0" Height="190">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            
                            <GroupBox Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="25 10 0 0" HorizontalAlignment="Left" Padding="0"
                                    Height="100" Width="285" BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1">
                                <GroupBox.Header>
                                    <TextBlock Text="PR69" FontSize="15"></TextBlock>
                                </GroupBox.Header>
                                <StackPanel Orientation="Vertical" >
                                    <StackPanel Orientation="Horizontal" Margin="10 15"
                                    HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom"  >
                                        <TextBlock Text="Calibration Delays" FontSize="16" />
                                        <Button Command="{Binding Path=EditCalibrationDelaysCmd, Source={x:Reference ConfigurationWindowVM}}"  Margin="10 0"
                                        Visibility="{Binding Path=IsCalibDelayTestsbtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, Source={x:Reference ConfigurationWindowVM}}"
                                        materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                            <Button.Content >
                                                <materialDesign:PackIcon Kind="CircleEditOutline" Height="20" Width="20" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                            </Button.Content>
                                            <Button.ToolTip>
                                                <TextBlock Text="Edit Calibration Delays Details"></TextBlock>
                                            </Button.ToolTip>
                                        </Button>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Analog O/P Tolerance" FontSize="16" Margin="10 0"/>
                                        <Button Command="{Binding Path=EditTolerancePR69Cmd, Source={x:Reference ConfigurationWindowVM}}"  
                                        Visibility="{Binding Path=IstolerancebtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, Source={x:Reference ConfigurationWindowVM}}"
                                        materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                            <Button.Content >
                                                <materialDesign:PackIcon Kind="CircleEditOutline" Height="20" Width="20" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                            </Button.Content>
                                            <Button.ToolTip>
                                                <TextBlock Text="Edit Tolerance Of PR69 Details"></TextBlock>
                                            </Button.ToolTip>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="25 10 0 0" HorizontalAlignment="Left" Padding="0"
                                    Height="100" Width="280" BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1">
                                <GroupBox.Header>
                                    <TextBlock Text="Process Indicator" FontSize="15"></TextBlock>
                                </GroupBox.Header>
                                <StackPanel Orientation="Vertical" >
                                    <StackPanel Orientation="Horizontal" Margin="10 15"
                                    HorizontalAlignment="Left" Width="Auto"  VerticalAlignment="Bottom"  >
                                        <TextBlock Text="Calibration Delays" FontSize="16"/>
                                        <Button Command="{Binding Path=EditCalibrationDelaysPICmd, Source={x:Reference ConfigurationWindowVM}}"  Margin="10 0"
                                        Visibility="{Binding Path=IsCalibDelayTestsbtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, Source={x:Reference ConfigurationWindowVM}}"
                                        materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                            <Button.Content >
                                                <materialDesign:PackIcon Kind="CircleEditOutline" Height="20" Width="20" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                            </Button.Content>
                                            <Button.ToolTip>
                                                <TextBlock Text="Edit Calibration Delays PI Details"></TextBlock>
                                            </Button.ToolTip>
                                        </Button>
                                    </StackPanel>
                               
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Analog O/P Tolerance" FontSize="16" Margin="10 0"/>
                                        <Button Command="{Binding Path=EditToleranceCmd, Source={x:Reference ConfigurationWindowVM}}"  
                                        Visibility="{Binding Path=IstolerancebtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, Source={x:Reference ConfigurationWindowVM}}"
                                        materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                            <Button.Content >
                                                <materialDesign:PackIcon Kind="CircleEditOutline" Height="20" Width="20" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                            </Button.Content>
                                            <Button.ToolTip>
                                                <TextBlock Text="Edit Tolerance Of PI Details"></TextBlock>
                                            </Button.ToolTip>
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" Margin="25 20 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="75" Width="285" Padding="0"
                                      BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1">
                                <GroupBox.Header>
                                    <TextBlock Text="PR43" FontSize="15"></TextBlock>
                                </GroupBox.Header>
                               
                                <StackPanel Orientation="Horizontal" Margin="10 12" VerticalAlignment="Top"
                                HorizontalAlignment="Left" Width="Auto"   >
                                    <TextBlock Text="Calibration Delays" FontSize="16" Margin="10 0"/>
                                    <Button Command="{Binding Path=EditCalibrationDelaysPR43Cmd, Source={x:Reference ConfigurationWindowVM}}"  Margin="12 0"
                                        Visibility="{Binding Path=IsCalibDelayTestsbtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, Source={x:Reference ConfigurationWindowVM}}"
                                        materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" BorderThickness="0" Height="20" Padding="0" Width="20">
                                        <Button.Content >
                                            <materialDesign:PackIcon Kind="CircleEditOutline" Height="20" Width="20" Foreground="{DynamicResource PrimaryHueMidBrush}" VerticalAlignment="Center"/>
                                        </Button.Content>
                                        <Button.ToolTip>
                                            <TextBlock Text="Edit Calibration Delays (PR43) Details"></TextBlock>
                                        </Button.ToolTip>
                                    </Button>
                                </StackPanel>                                    
                               
                            </GroupBox>

                            <Border Grid.Row="2" Grid.ColumnSpan="3" Grid.Column="0" Margin="25 0 0 8"
                                    Height="auto" Width="auto" BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" >
                                <StackPanel Orientation="Horizontal">
                                    <TextBox Margin="15 0 0 0"   Width="500" Height="50"  materialDesign:HintAssist.Hint="MotFilePath" 
                                     Text="{Binding Path=Motfilepath, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged, Source={x:Reference ConfigurationWindowVM}}"
                                     IsReadOnly="True" VerticalAlignment="Center" FontSize="15"
                                     Style="{StaticResource MaterialDesignFloatingHintTextBox}" Foreground="{DynamicResource MaterialDesignBody}"></TextBox>
                                    <Button Content="Browse Mot/Hex File" Height="35" Width="auto" Margin="5 10" 
                                                Visibility="{Binding Path=BrowsemotfileBtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, Source={x:Reference ConfigurationWindowVM}}"
                                                materialDesign:ShadowAssist.ShadowDepth="Depth0" Background="Teal" materialDesign:ButtonAssist.CornerRadius="5"
                                                Foreground="WhiteSmoke" VerticalAlignment="Center" FontSize="12" Command="{Binding Path=BrowsemotfileCmd, Source={x:Reference ConfigurationWindowVM}}"/>

                                    
                                </StackPanel>
                            </Border>

                            <Button  Height="38" Width="128" Margin="20 20"  Grid.Row="0" Grid.Column="3" Grid.RowSpan="2"
                                             Visibility="{Binding Path=IsSaveDelayToleranceBtnVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, Source={x:Reference ConfigurationWindowVM}}"
                                             materialDesign:ShadowAssist.ShadowDepth="Depth0" Background="Teal" materialDesign:ButtonAssist.CornerRadius="5"
                                             Foreground="WhiteSmoke" VerticalAlignment="Center" FontSize="12" Command="{Binding Path=SaveDelayToleranceCmd, Source={x:Reference ConfigurationWindowVM}}">

                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="ContentSave" Foreground="WhiteSmoke" Height="20" Width="15" VerticalAlignment="Center" />
                                        <TextBlock  Margin="5 0 0 0" Text="Save Details"
                                                    VerticalAlignment="Center" Foreground="WhiteSmoke"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>

                        </Grid>
                    </Border>
                </StackPanel>
            </Border>

        </materialDesign:DialogHost.Content>

    </materialDesign:DialogHost>
</Window>
